# import * from './generated/prisma.graphql'

type Me {
  me: User!
  token: String!
}

type Query {
  me: User!
  myCompany: Company!
  myEmployees(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [User!]!
  checkUser(email: String!): Boolean!
}

type Mutation {
  signup(name: String!, email: String!, password: String!): Me!
  login(email: String!, password: String!): Me!

  createOwnCompany(
    name: String!
    employees: [UserCreateWithoutCompanyInput!]!
  ): Company!
  addEmployee(name: String!, email: String!, password: String!): User!
  removeEmployee(id: ID!): User!
  updateOwnCompany(name: String, contact: ID!): Company!
  addCredits(amount: Int!): Int!
}

input UserCreateWithoutCompanyInput {
  email: String!
  name: String!
  password: String!
}

type User {
  id: ID!
  email: String!
  permissions: [String!]
  deleted: Boolean!
  name: String!
  company: Company
  interviews: [Interview!]!
  contactOf: Company
  createdAt: DateTime!
  updatedAt: DateTime!
}
